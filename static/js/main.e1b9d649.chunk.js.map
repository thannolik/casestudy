{"version":3,"sources":["logo.svg","containers/characterlist/index.js","containers/search/index.js","components/filters/index.js","components/characters/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CharacterList","prop","state","search","characterlist","className","this","props","map","item","i","src","image","border","name","id","created","status","species","gender","href","origin","url","location","React","Component","Characters","handleChange","event","setState","target","value","onSubmit","preventDefault","newSearch","updatedList","filter","toLowerCase","console","log","handleClick","speciesName","speciesList","length","document","getElementById","innerText","style","display","axios","get","then","json","data","results","type","onClick","icon","faTimes","onChange","App","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1b9d649.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport './style.css';\r\n\r\nclass CharacterList extends React.Component {\r\n    constructor(prop) {\r\n        super(prop);\r\n\r\n        this.state = {\r\n            search: '',\r\n            characterlist: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container charlist-container\">\r\n                <div className=\"row\">\r\n                    {this.props.characterlist.map((item, i) =>\r\n                        <div className=\"col-lg-3 char-container\">\r\n                            <div className=\"image-container\">\r\n                                <img src={item.image} border=\"0\" />\r\n                                <div className=\"name-tile\">\r\n                                    <p className=\"item-name\">{item.name}</p>\r\n                                    <p className=\"item-id\">ID:&nbsp;{item.id}&nbsp;- Created&nbsp;{item.created}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"desc-tile\">\r\n                                <div className=\"desc-row\">\r\n                                    <p className=\"desc-col-title\">STATUS</p>\r\n                                    <p className=\"desc-col-value\">{item.status}</p>\r\n                                </div>\r\n                                <div className=\"desc-row\">\r\n                                    <p className=\"desc-col-title\">SPECIES</p>\r\n                                    <p className=\"desc-col-value\">{item.species}</p>\r\n                                </div>\r\n                                <div className=\"desc-row\">\r\n                                    <p className=\"desc-col-title\">GENDER</p>\r\n                                    <p className=\"desc-col-value\">{item.gender}</p>\r\n                                </div>\r\n                                <div className=\"desc-row\">\r\n                                    <p className=\"desc-col-title\">ORIGIN</p>\r\n                                    <p className=\"desc-col-value\">\r\n                                        <a href={item.origin.url}>\r\n                                        {item.origin.name}</a></p>\r\n                                </div>\r\n                                <div className=\"desc-row\">\r\n                                    <p className=\"desc-col-title\">LAST LOCATION</p>\r\n                                    <p className=\"desc-col-value\"><a href={item.location.url}>\r\n                                        {item.location.name}</a></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CharacterList;","import React from 'react';\r\nimport './style.css';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            characterlist: []\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            search: event.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n        const newSearch = this.state.search;\r\n        var updatedList = this.state.characterlist;\r\n        updatedList = updatedList.filter(function (item) {\r\n            return item.name.toLowerCase().search(\r\n                newSearch.toLowerCase()) !== -1;\r\n        });\r\n        console.log(updatedList);\r\n        this.setState({ characterlist: updatedList });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-container\">\r\n                <form>\r\n                    <input type=\"text\" name=\"search\" value={this.state.search} onChange={this.handleChange} />\r\n                    <button className=\"\" onClick={this.onSubmit}>SEARCH</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport './style.css';\r\n\r\nclass Filters extends React.Component {\r\n    constructor(prop){\r\n        super(prop);\r\n\r\n        this.state = {\r\n            species: ''\r\n        }\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.setState({ species: event.target.value });\r\n        const speciesName = this.state.species;\r\n        alert(document.getElementById('output').text);\r\n        document.getElementById('output').text = speciesName;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"filter-box-container\">\r\n                <p className=\"filter-box-title\">Filters</p>\r\n                <div className=\"filter-box\">\r\n                    <p className=\"filter-title\">Species</p>\r\n                    <form>\r\n                    <ul>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\" value=\"Human\" onClick={this.handleClick}/>\r\n                            <span>Human</span>\r\n                        </li>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\"/>\r\n                            <span>Mytholog</span>\r\n                        </li>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\"/>\r\n                            <span>Other Species</span>\r\n                        </li>\r\n                    </ul>\r\n                    </form>\r\n                </div>\r\n                <div className=\"filter-box\">\r\n                    <p className=\"filter-title\">Gender</p>\r\n                    <ul>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\"/>\r\n                            <span>Male</span>\r\n                        </li>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\"/>\r\n                            <span>Female</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"filter-box\">\r\n                    <p className=\"filter-title\">Origin</p>\r\n                    <ul>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\"/>\r\n                            <span>Unknown</span>\r\n                        </li>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\"/>\r\n                            <span>Post-Apocalyptic Earth</span>\r\n                        </li>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\"/>\r\n                            <span>Nuptia 4</span>\r\n                        </li>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\"/>\r\n                            <span>Other Origins</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filters;","import React from 'react';\r\nimport './style.css';\r\nimport axios from 'axios';\r\nimport CharacterList from './../../containers/characterlist';\r\nimport Search from './../../containers/search';\r\nimport Filters from './../filters';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes  } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Characters extends React.Component {\r\n    constructor(prop) {\r\n        super(prop);\r\n\r\n        this.state = {\r\n            characterlist: [],\r\n            species: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://rickandmortyapi.com/api/character/')\r\n            .then(json => this.setState({ characterlist: json.data.results }));\r\n    }\r\n\r\n    //SEARCH\r\n    handleChange = event => {\r\n        this.setState({\r\n            search: event.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n        const newSearch = this.state.search;\r\n        var updatedList = this.state.characterlist;\r\n        updatedList = updatedList.filter(function (item) {\r\n            return item.name.toLowerCase().search(\r\n                newSearch.toLowerCase()) !== -1;\r\n        });\r\n        console.log(updatedList);\r\n        this.setState({ characterlist: updatedList });\r\n    }\r\n\r\n    //FILTER\r\n    handleClick = event => {\r\n        let speciesName = event.target.value;\r\n        speciesName = speciesName.toLowerCase();\r\n        //alert(document.getElementById('output').innerText);\r\n        var updatedList = this.state.characterlist;\r\n        updatedList = updatedList.filter(function (item) {\r\n            let speciesList = item.species.toLowerCase();\r\n            let speciesSearch = speciesList.search(speciesName);\r\n            \r\n            return speciesList.search(speciesName) !== -1;\r\n        });\r\n\r\n        if(updatedList.length != 0) {\r\n            document.getElementById('filters').innerText = '';\r\n            document.getElementById('buttonText').style.display = 'inline-block';\r\n            document.getElementById('speciesName').innerText = speciesName;\r\n        } else {\r\n            document.getElementById('filters').innerText = '';\r\n            document.getElementById('buttonText').style.display = 'inline-block';\r\n            document.getElementById('speciesName').innerText = speciesName;\r\n            document.getElementById('output').innerText = 'No Records to Show';\r\n        }\r\n        \r\n        console.log(updatedList.length);\r\n        this.setState({ characterlist: updatedList });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3\">\r\n                    <div className=\"filter-box-container\">\r\n                <p className=\"filter-box-title\">Filters</p>\r\n                <div className=\"filter-box\">\r\n                    <p className=\"filter-title\">Species</p>\r\n                    <form>\r\n                    <ul>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\" value=\"Human\" onClick={this.handleClick}/>\r\n                            <span>Human</span>\r\n                        </li>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\" value=\"Mytholog\" onClick={this.handleClick}/>\r\n                            <span>Mytholog</span>\r\n                        </li>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\" value=\"\" onClick={this.handleClick}/>\r\n                            <span>Other Species</span>\r\n                        </li>\r\n                    </ul>\r\n                    </form>\r\n                </div>\r\n                <div className=\"filter-box\">\r\n                    <p className=\"filter-title\">Gender</p>\r\n                    <ul>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\"/>\r\n                            <span>Male</span>\r\n                        </li>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\"/>\r\n                            <span>Female</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"filter-box\">\r\n                    <p className=\"filter-title\">Origin</p>\r\n                    <ul>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\"/>\r\n                            <span>Unknown</span>\r\n                        </li>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\"/>\r\n                            <span>Post-Apocalyptic Earth</span>\r\n                        </li>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\"/>\r\n                            <span>Nuptia 4</span>\r\n                        </li>\r\n                        <li>\r\n                            <input type=\"checkbox\" name=\"species\"/>\r\n                            <span>Other Origins</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n                    </div>\r\n                    <div className=\"col-lg-9\">\r\n                        <div className=\"search-filter-container\">\r\n                            <p className=\"filter-box-title\">Selected Filters</p>\r\n                            <div className=\"filters-selected-container\">\r\n                                <p className=\"filters-selected\" id=\"filters\">\r\n                                    No Filters Selected\r\n                                </p>\r\n                                <div className=\"button-text\" id=\"buttonText\">\r\n                                    <span id=\"speciesName\"></span>\r\n                                    <a href=\"#\">\r\n                                        <FontAwesomeIcon icon={faTimes } />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"search-box-container\">\r\n                                <p className=\"search-title\">Search by Name:</p>\r\n                                <div className=\"search-container\">\r\n                                    <form>\r\n                                        <input type=\"text\" name=\"search\" value={this.state.search} onChange={this.handleChange} />\r\n                                        <button className=\"\" onClick={this.onSubmit}>SEARCH</button>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"search-id-container\">\r\n                                    <select>\r\n                                        <option value=\"\">Search By ID</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"character-list\" id=\"output\">\r\n                                <CharacterList characterlist={this.state.characterlist} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Characters;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Characters from './components/characters';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Characters />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}